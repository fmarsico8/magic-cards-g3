version: '3.8'

services:
  nginx:
    image: nginx:stable
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /dev/null:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
      - web
    networks:
      - app-network
  app:
    image: magic-cards-g3-app
    container_name: magic-cards-app
    ports:
      - "3001:3001"
    environment:
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - AWS_S3_REGION=${AWS_S3_REGION}
      - AWS_S3_ACCESS_KEY_ID=${AWS_S3_ACCESS_KEY_ID}
      - AWS_S3_SECRET_ACCESS_KEY=${AWS_S3_SECRET_ACCESS_KEY}
      - NODE_ENV=${NODE_ENV}
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=1h
      - MONGO_URI=${MONGO_URI}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    networks:
      - app-network
    volumes:
      - ./backend/uploads:/app/uploads

  mongo:
    image: mongo:6
    container_name: mongo
    profiles:
      - dev
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

  web:
    build:
      context: ./g3-frontend-next
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://52.70.129.127/api
    container_name: magic-cards-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:3001/api}
    restart: unless-stopped
    networks:
      - app-network

volumes:
  mongo_data:


networks:
  app-network:
    driver: bridge
